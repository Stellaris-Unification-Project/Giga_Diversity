#overwrite of one event from ehof_origin_startup.txt

namespace = ehof_incohesive

# There is some trickiness to this event - most of these effects appear redundant
# but are required to fire IN THIS ORDER to work correctly. This is most for names
# - Lans

# MAIN EVENT - should hopefully scope correctly if multiple ppl have the origin
# It's on you if you play MP with 8+ people all using this origin, though.
# DO NOT FIRE THIS EVENT MANUALLY

country_event = {
	id = ehof_incohesive.2
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_origin = origin_incohesive
		NOT = { has_country_flag = ehofo_SETUP }
	}

	immediate = {
		set_country_flag = ehofo_SETUP

		country_event = {
			id = ehof_incohesive.3
		}
		country_event = {
			id = ehof_incohesive.6
			days = 5
		}
		# so help you God if it takes you longer than 5 days to set your giga settings.

		random_owned_leader = {
			limit = {
				leader_class = governor
			}
			unassign_leader = this
			save_global_event_target_as = ehofo_governor
		}

		capital_scope = {
			save_global_event_target_as = ehofo_old_world
			solar_system = {
				save_global_event_target_as = ehofo_old_system
			}
			sector = {
				set_name = "" # hide from galaxy map?
			}
		}

		# New System name changes to Old System name
		# Old Star name changes to New Star name
		# New Star name changes to New System name
		# Old System name changes to Old Star name
		# New Capital name changes to Old Capital name

		event_target:ehofo_new_system = {
			set_name = "ehofo_new_system_name"
		}
		event_target:ehofo_old_system = {
			system_star = {
				set_name = "ehofo_old_star_name"
			}
		}
		event_target:ehofo_new_system = {
			system_star = {
				set_name = "ehofo_new_star_name"
			}
			every_system_planet = {
				ehofo_name_new_barren = yes
				every_moon = {
					prev = {
						save_global_event_target_as = ehofo_previous_planet
					}
					set_name = "ehofo_NEW_moon"
					# This initialiser should only have 1 moon per each planet.
					# dont change
					clear_global_event_target = ehofo_previous_planet
				}
			}
		}
		event_target:ehofo_old_system = {
			set_name = "ehofo_old_system_name"
		}

		event_target:ehofo_new_system = {
			random_system_planet = {
				limit = {
					is_star = no
					is_asteroid = no
				}
				set_planet_flag = forbid_guillis_planet_modifiers
				#
				clear_deposits = yes
				change_pc = pc_ll_temperate
				create_colony = {
					owner = root
				}
				save_global_event_target_as = ehofo_new_world
				set_name = "ehofo_new_capital_name"
			}
			save_event_target_as = ehof_color_system_name
		}

		country_event = { id = ehof_systems.005 }	# Generate System Color

		event_target:ehofo_new_system = {
			create_starbase = { 
				size = "starbase_starport"
				module = "shipyard"
				building = "crew_quarters"
				owner = root 

				effect = {
					save_global_event_target_as = ehofo_starbase
				}
			} # AFTER system colour, so the starbase is named with the colour of the system (:
		}

		event_target:ehofo_old_system = {
			random_system_planet = {
				limit = { has_planet_flag = ehof_origin_planet_1 }
				set_name = "ehofo_old_planet_name_1"
			}
			random_system_planet = {
				limit = { has_planet_flag = ehof_origin_planet_2 }
				set_name = "ehofo_old_planet_name_2"
			}
		}

		capital_scope = {
			solar_system = {
				starbase = {
					fleet = {
						destroy_fleet = this
					}
				}
			}
			random_owned_pop = {
				limit = {
					root.owner_main_species = {
						NOT = {
							is_same_species = prev.species
						}
					}
				}
				save_global_event_target_as = ehofo_secondary_species
			}
		}

		every_owned_fleet = {
			limit = {
				any_owned_ship = {
					OR = {
						is_ship_size = constructor
						is_ship_size = science
						is_ship_size = corvette
					}
				}
			}
			if = {
				limit = {
					exists = leader
				}
				leader = {
					unassign_leader = this
					save_global_event_target_as = ehofo_scientist
				}
			}
			destroy_fleet = this
		}

		event_target:ehofo_new_world = {
			change_pc = event_target:ehofo_old_world
			#added in GD this will hopefully keep Planetary Diversity from randomizing this world
			solar_system = { set_star_flag = empire_home_system }
			generate_pd_start_deposits_and_blockers = yes #using PDs version of adding starting deposits
			planet = { planet_event = { id = gdpdraremodifiers.00 } }
			#end edits made by GD
			#generate_start_deposits_and_blockers = yes #generate_pd_start_deposits_and_blockers handles deposits and blockers this accommodates the PD worlds
			generate_start_buildings_and_districts = yes
			generate_start_pops = yes
			if = {
				limit = {
					exists = event_target:ehofo_secondary_species
				}
				every_owned_pop = {
					limit = {
						species = {
							NOT = {
								root.owner_main_species = {
									is_same_species = prev
								}
							}
						}
					}
					prev = {
						create_pop = {
							species = event_target:ehofo_secondary_species
						}
					}
					kill_pop = yes
				}
			}
			set_planet_size = 20
		}

		event_target:ehofo_old_world = {
			destroy_colony = yes
			clear_deposits = yes
			remove_all_buildings = yes
			remove_all_districts = yes
			change_pc = pc_barren_cold
			#remove_planet = yes # not required
		}

		country_event = {
			id = ehof_incohesive.4
		}

		event_target:ehofo_new_world = {
			sector = { assign_leader = event_target:ehofo_governor }
		}


		create_fleet = {
			effect = {
				set_owner = prev

				create_ship = {
					name = random
					random_existing_design = science
				}

				set_fleet_stance = evasive
				#set_location = prev.capital_star
				set_location = event_target:ehofo_new_system

				set_leader = event_target:ehofo_scientist
			}
		}

		create_fleet = {
			effect = {
				set_owner = prev

				create_ship = {
					name = random
					random_existing_design = constructor
				}

				set_fleet_stance = evasive
				set_location = event_target:ehofo_new_system
			}
		}

		create_fleet = {
			set_take_point = yes
			effect = {
				set_owner = prev

				while = {
					count = 3
					create_ship = {
						name = random
						random_existing_design = corvette
					}
				}

				set_location = event_target:ehofo_new_system
			}
		}

		clear_global_event_target = ehofo_old_world
		clear_global_event_target = ehofo_old_system
		clear_global_event_target = ehofo_new_world
		clear_global_event_target = ehofo_new_system
		clear_global_event_target = ehofo_starbase
		clear_global_event_target = ehofo_scientist
		clear_global_event_target = ehofo_governor
		clear_global_event_target = ehofo_secondary_species

		country_event = {
			id = ehof_incohesive.5
		}

		#add_modifier = {
		#	modifier = mod_ehof_origin_sensorrange_debug
		#}
	}
}